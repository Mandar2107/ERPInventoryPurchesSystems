// <auto-generated />
using System;
using ERPInventoryPurchesSystems.Utility;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ERPInventoryPurchesSystems.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250709051035_addnew1")]
    partial class addnew1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.Master.Category", b =>
                {
                    b.Property<string>("CategoryCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("ApprovalWorkflow")
                        .HasColumnType("bit");

                    b.Property<string>("AssociatedGLAccounts")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangeHistory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DefaultUOM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("EnableAnalytics")
                        .HasColumnType("bit");

                    b.Property<bool>("InspectionRequired")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReorderPolicy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageRequirements")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryCode");

                    b.HasIndex("DepartmentCode");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.Master.Department", b =>
                {
                    b.Property<string>("DepartmentCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApprovalAuthorityLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentHead")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtensionNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinkedModules")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryFunction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentCode");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.Master.Item", b =>
                {
                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("BatchTracking")
                        .HasColumnType("bit");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomAttributes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultWarehouseLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscountStructure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HSNSACCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCategoryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ItemDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("LastPurchasePrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LeadTime")
                        .HasColumnType("int");

                    b.Property<string>("MSDSComplianceDocs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaximumStockLevel")
                        .HasColumnType("int");

                    b.Property<int>("MinimumStockLevel")
                        .HasColumnType("int");

                    b.Property<string>("ModelSpecification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferredVendorCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PurchaseUOM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReorderLevel")
                        .HasColumnType("int");

                    b.Property<string>("SalesDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesUOM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SellingPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("SerialNumberTracking")
                        .HasColumnType("bit");

                    b.Property<decimal>("StandardCost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxRate")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("UOM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorItemCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemCode");

                    b.HasIndex("ItemCategoryCode");

                    b.HasIndex("PreferredVendorCode");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.Master.User", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccessLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AccountLockStatus")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PasswordExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserID");

                    b.HasIndex("DepartmentCode");

                    b.HasIndex("VendorCode");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.Master.Vendor", b =>
                {
                    b.Property<string>("VendorCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AverageLeadTime")
                        .HasColumnType("int");

                    b.Property<string>("BankAccountDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("BlacklistStatus")
                        .HasColumnType("bit");

                    b.Property<string>("CategoryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPersonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractAgreement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CreditLimit")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeliveryReliabilityScore")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaxNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GSTVATRegistration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISOCertification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastPurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MSMECertificate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PANNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentTerms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QualityRating")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxIdentificationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalSpend")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VendorItemCodes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VendorCode");

                    b.HasIndex("CategoryCode");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.Approval", b =>
                {
                    b.Property<int>("ApprovalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApprovalID"));

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovalStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproverUserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PurchaseRequisitionID")
                        .HasColumnType("int");

                    b.HasKey("ApprovalID");

                    b.HasIndex("ApproverUserID");

                    b.HasIndex("DepartmentCode");

                    b.HasIndex("PurchaseRequisitionID");

                    b.ToTable("Approvals");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.GRNItem", b =>
                {
                    b.Property<int>("GRNItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GRNItemId"));

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GRNId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("OrderedQuantity")
                        .HasColumnType("int");

                    b.Property<int>("ReceivedQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GRNItemId");

                    b.HasIndex("GRNId");

                    b.HasIndex("ItemCode");

                    b.ToTable("GRNItems");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.GoodsReceiptNote", b =>
                {
                    b.Property<int>("GRNId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GRNId"));

                    b.Property<string>("DeliveryNoteNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("GRNDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GRNNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspectionStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("POId")
                        .HasColumnType("int");

                    b.Property<string>("ReceivedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TransporterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("VerificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VerifiedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("GRNId");

                    b.HasIndex("DepartmentCode");

                    b.HasIndex("POId");

                    b.HasIndex("ReceivedByUserId");

                    b.HasIndex("VendorCode");

                    b.HasIndex("VerifiedByUserId");

                    b.ToTable("GoodsReceiptNotes");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.InspectionItem", b =>
                {
                    b.Property<int>("InspectionItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InspectionItemId"));

                    b.Property<string>("DefectsFound")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InspectedQuantity")
                        .HasColumnType("int");

                    b.Property<int>("InspectionId")
                        .HasColumnType("int");

                    b.Property<string>("InspectionResult")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ReceivedQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InspectionItemId");

                    b.HasIndex("InspectionId");

                    b.HasIndex("ItemCode");

                    b.ToTable("InspectionItems");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("GRNId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("POId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentTerms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("TotalInvoiceAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("InvoiceId");

                    b.HasIndex("DepartmentCode");

                    b.HasIndex("GRNId");

                    b.HasIndex("POId");

                    b.HasIndex("ProcessedByUserId");

                    b.HasIndex("VendorCode");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.InvoiceItem", b =>
                {
                    b.Property<int>("InvoiceItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceItemId"));

                    b.Property<int>("GRNQuantity")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("InvoicedQuantity")
                        .HasColumnType("int");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MatchStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("POQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("InvoiceItemId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ItemCode");

                    b.ToTable("InvoiceItems");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.POItem", b =>
                {
                    b.Property<int>("POItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("POItemId"));

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryTerms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("POId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("POItemId");

                    b.HasIndex("ItemCode");

                    b.HasIndex("POId");

                    b.ToTable("POItems");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.PRItem", b =>
                {
                    b.Property<int>("PRItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PRItemID"));

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Justification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PurchaseRequisitionID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequiredDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PRItemID");

                    b.HasIndex("ItemCode");

                    b.HasIndex("PurchaseRequisitionID");

                    b.ToTable("PRItems");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.PurchaseOrder", b =>
                {
                    b.Property<int>("POId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("POId"));

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("PODate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PONumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PRId")
                        .HasColumnType("int");

                    b.Property<string>("RequestedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VendorContact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("POId");

                    b.HasIndex("DepartmentCode");

                    b.HasIndex("PRId");

                    b.HasIndex("RequestedByUserId");

                    b.HasIndex("VendorCode");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.PurchesRequstiaon", b =>
                {
                    b.Property<int>("PurchaseRequisitionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseRequisitionID"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("PRDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PRNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubmittedByUserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PurchaseRequisitionID");

                    b.HasIndex("DepartmentCode");

                    b.HasIndex("SubmittedByUserID");

                    b.ToTable("PurchaseRequisitions");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.QualityInspection", b =>
                {
                    b.Property<int>("InspectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InspectionId"));

                    b.Property<string>("ActionTakenByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("CorrectiveActionRequired")
                        .HasColumnType("bit");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("FollowUpDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GRNId")
                        .HasColumnType("int");

                    b.Property<string>("InspectedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("InspectionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InspectionMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceStandards")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InspectionId");

                    b.HasIndex("ActionTakenByUserId");

                    b.HasIndex("DepartmentCode");

                    b.HasIndex("GRNId");

                    b.HasIndex("InspectedByUserId");

                    b.ToTable("QualityInspections");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.QuotationComparison", b =>
                {
                    b.Property<int>("ComparisonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComparisonId"));

                    b.Property<DateTime>("DateOfComparison")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PRId")
                        .HasColumnType("int");

                    b.Property<string>("RequestedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ComparisonId");

                    b.HasIndex("DepartmentCode");

                    b.HasIndex("PRId");

                    b.HasIndex("RequestedByUserId");

                    b.ToTable("QuotationComparisons");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.QuotationComparisonItem", b =>
                {
                    b.Property<int>("ComparisonItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComparisonItemId"));

                    b.Property<int>("ComparisonId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("QuotedQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("VendorRating")
                        .HasColumnType("int");

                    b.HasKey("ComparisonItemId");

                    b.HasIndex("ComparisonId");

                    b.HasIndex("ItemCode");

                    b.HasIndex("VendorCode");

                    b.ToTable("QuotationComparisonItems");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.RFQItem", b =>
                {
                    b.Property<int>("RFQItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RFQItemId"));

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("QuotationAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RFQId")
                        .HasColumnType("int");

                    b.Property<string>("TermsAndConditions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RFQItemId");

                    b.HasIndex("ItemCode");

                    b.HasIndex("RFQId");

                    b.ToTable("RFQItems");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.RequestForQuotation", b =>
                {
                    b.Property<int>("RFQId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RFQId"));

                    b.Property<int>("PRId")
                        .HasColumnType("int");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RFQId");

                    b.HasIndex("PRId");

                    b.HasIndex("VendorCode");

                    b.ToTable("RequestForQuotations");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.Master.Category", b =>
                {
                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.Department", "Department")
                        .WithMany("Categories")
                        .HasForeignKey("DepartmentCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.Master.Item", b =>
                {
                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("ItemCategoryCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.Vendor", "PreferredVendor")
                        .WithMany("Items")
                        .HasForeignKey("PreferredVendorCode")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Category");

                    b.Navigation("PreferredVendor");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.Master.User", b =>
                {
                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.Vendor", "VendorProfile")
                        .WithMany()
                        .HasForeignKey("VendorCode");

                    b.Navigation("Department");

                    b.Navigation("VendorProfile");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.Master.Vendor", b =>
                {
                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.Category", "Category")
                        .WithMany("Vendors")
                        .HasForeignKey("CategoryCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.Approval", b =>
                {
                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.User", "Approver")
                        .WithMany()
                        .HasForeignKey("ApproverUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.PR.PurchesRequstiaon", "PurchaseRequisition")
                        .WithMany()
                        .HasForeignKey("PurchaseRequisitionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Approver");

                    b.Navigation("Department");

                    b.Navigation("PurchaseRequisition");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.GRNItem", b =>
                {
                    b.HasOne("ERPInventoryPurchesSystems.Models.PR.GoodsReceiptNote", "GRN")
                        .WithMany("Items")
                        .HasForeignKey("GRNId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GRN");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.GoodsReceiptNote", b =>
                {
                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.PR.PurchaseOrder", "PurchaseOrder")
                        .WithMany()
                        .HasForeignKey("POId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.User", "ReceivedBy")
                        .WithMany()
                        .HasForeignKey("ReceivedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.User", "VerifiedBy")
                        .WithMany()
                        .HasForeignKey("VerifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("PurchaseOrder");

                    b.Navigation("ReceivedBy");

                    b.Navigation("Vendor");

                    b.Navigation("VerifiedBy");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.InspectionItem", b =>
                {
                    b.HasOne("ERPInventoryPurchesSystems.Models.PR.QualityInspection", "Inspection")
                        .WithMany("Items")
                        .HasForeignKey("InspectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inspection");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.Invoice", b =>
                {
                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.PR.GoodsReceiptNote", "GRN")
                        .WithMany()
                        .HasForeignKey("GRNId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.PR.PurchaseOrder", "PurchaseOrder")
                        .WithMany()
                        .HasForeignKey("POId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.User", "ProcessedBy")
                        .WithMany()
                        .HasForeignKey("ProcessedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("GRN");

                    b.Navigation("ProcessedBy");

                    b.Navigation("PurchaseOrder");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.InvoiceItem", b =>
                {
                    b.HasOne("ERPInventoryPurchesSystems.Models.PR.Invoice", "Invoice")
                        .WithMany("Items")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.POItem", b =>
                {
                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.PR.PurchaseOrder", "PurchaseOrder")
                        .WithMany("Items")
                        .HasForeignKey("POId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.PRItem", b =>
                {
                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.PR.PurchesRequstiaon", "PurchaseRequisition")
                        .WithMany("Items")
                        .HasForeignKey("PurchaseRequisitionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("PurchaseRequisition");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.PurchaseOrder", b =>
                {
                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.PR.PurchesRequstiaon", "PurchaseRequisition")
                        .WithMany()
                        .HasForeignKey("PRId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.User", "RequestedBy")
                        .WithMany()
                        .HasForeignKey("RequestedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("PurchaseRequisition");

                    b.Navigation("RequestedBy");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.PurchesRequstiaon", b =>
                {
                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.User", "SubmittedBy")
                        .WithMany()
                        .HasForeignKey("SubmittedByUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("SubmittedBy");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.QualityInspection", b =>
                {
                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.User", "ActionTakenBy")
                        .WithMany()
                        .HasForeignKey("ActionTakenByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.PR.GoodsReceiptNote", "GRN")
                        .WithMany()
                        .HasForeignKey("GRNId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.User", "InspectedBy")
                        .WithMany()
                        .HasForeignKey("InspectedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ActionTakenBy");

                    b.Navigation("Department");

                    b.Navigation("GRN");

                    b.Navigation("InspectedBy");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.QuotationComparison", b =>
                {
                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.PR.PurchesRequstiaon", "PurchaseRequisition")
                        .WithMany()
                        .HasForeignKey("PRId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.User", "RequestedBy")
                        .WithMany()
                        .HasForeignKey("RequestedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("PurchaseRequisition");

                    b.Navigation("RequestedBy");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.QuotationComparisonItem", b =>
                {
                    b.HasOne("ERPInventoryPurchesSystems.Models.PR.QuotationComparison", "Comparison")
                        .WithMany("Items")
                        .HasForeignKey("ComparisonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comparison");

                    b.Navigation("Item");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.RFQItem", b =>
                {
                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.PR.RequestForQuotation", "RFQ")
                        .WithMany("Items")
                        .HasForeignKey("RFQId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("RFQ");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.RequestForQuotation", b =>
                {
                    b.HasOne("ERPInventoryPurchesSystems.Models.PR.PurchesRequstiaon", "PurchaseRequisition")
                        .WithMany()
                        .HasForeignKey("PRId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERPInventoryPurchesSystems.Models.Master.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseRequisition");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.Master.Category", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Vendors");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.Master.Department", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.Master.Vendor", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.GoodsReceiptNote", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.Invoice", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.PurchaseOrder", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.PurchesRequstiaon", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.QualityInspection", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.QuotationComparison", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ERPInventoryPurchesSystems.Models.PR.RequestForQuotation", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
