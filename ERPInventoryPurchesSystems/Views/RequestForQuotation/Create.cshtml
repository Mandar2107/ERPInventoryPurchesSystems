@model ERPInventoryPurchesSystems.Models.PR.RequestForQuotation

@{
    ViewData["Title"] = "Create RFQ";
}

<h2 class="mb-4">Create RFQ</h2>

<form asp-action="Create" method="post">
    @Html.AntiForgeryToken()

    <div class="mb-3">
        <label asp-for="PRId" class="form-label">PR Number</label>
        <select asp-for="PRId" asp-items="ViewBag.PRs" class="form-control" id="prSelector"></select>
    </div>

    <h4 class="mt-4">RFQ Items</h4>
    <table class="table table-bordered" id="rfqItemsTable">
        <thead class="table-light">
            <tr>
                <th>Item</th>
                <th>Quantity</th>
                <th>Delivery Date</th>
                <th>Quotation Amount</th>
                <th>Terms</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>

    <button type="button" class="btn btn-secondary mb-3" onclick="addRFQItem()">Add Item</button>
    <br />
    <button type="submit" class="btn btn-primary">Submit</button>
</form>

@section Scripts {
    <script>
        const itemOptions = `@Html.Raw(string.Join("", ((SelectList)ViewBag.Items).Select(i => $"<option value='{i.Value}'>{i.Text}</option>")))`;

        function addRFQItem() {
            const table = document.getElementById("rfqItemsTable").getElementsByTagName('tbody')[0];
            const rowCount = table.rows.length;
            const row = table.insertRow();

            row.innerHTML = `
                <td>
                    <select name="Items[${rowCount}].ItemCode" class="form-control">
                        ${itemOptions}
                    </select>
                </td>
                <td><input name="Items[${rowCount}].Quantity" type="number" class="form-control" /></td>
                <td><input name="Items[${rowCount}].DeliveryDate" type="date" class="form-control" /></td>
                <td><input name="Items[${rowCount}].QuotationAmount" type="number" step="0.01" class="form-control" /></td>
                <td><input name="Items[${rowCount}].TermsAndConditions" class="form-control" /></td>
                <td><button type="button" class="btn btn-danger" onclick="this.closest('tr').remove()">Remove</button></td>
            `;
        }

        document.getElementById("prSelector").addEventListener("change", function () {
            const prId = this.value;
            fetch(`/RequestForQuotation/GetPRItems?prId=${prId}`)
                .then(response => response.json())
                .then(data => {
                    const tbody = document.querySelector("#rfqItemsTable tbody");
                    tbody.innerHTML = "";

                    const seenItems = new Set();

                    data.forEach((item, index) => {
                        if (seenItems.has(item.itemCode)) return;
                        seenItems.add(item.itemCode);

                        const row = document.createElement("tr");
                        row.innerHTML = `
                            <td>
                                <input type="hidden" name="Items[${index}].ItemCode" value="${item.itemCode}" />
                                ${item.itemName}
                            </td>
                            <td><input name="Items[${index}].Quantity" value="${item.quantity}" class="form-control" /></td>
                            <td><input name="Items[${index}].DeliveryDate" type="date" class="form-control" /></td>
                            <td><input name="Items[${index}].QuotationAmount" type="number" step="0.01" class="form-control" /></td>
                            <td><input name="Items[${index}].TermsAndConditions" class="form-control" /></td>
                            <td><button type="button" class="btn btn-danger" onclick="this.closest('tr').remove()">Remove</button></td>
                        `;
                        tbody.appendChild(row);
                    });
                });
        });
    </script>
}
